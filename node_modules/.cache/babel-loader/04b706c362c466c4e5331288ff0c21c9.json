{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/hurui/Desktop/project-SHP/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport { reqGetCode } from '@/api';\nvar state = {\n  code: []\n};\nvar mutations = {\n  REQGETCODE: function REQGETCODE(state, code) {\n    state.code = code;\n  }\n};\nvar getters = {};\nvar actions = {\n  reqCode: function reqCode(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGetCode();\n\n            case 3:\n              result = _context.sent;\n\n              if (!(result.code === 200)) {\n                _context.next = 9;\n                break;\n              }\n\n              console.log(result);\n              commit('REQGETCODE', result.data);\n              _context.next = 10;\n              break;\n\n            case 9:\n              return _context.abrupt(\"return\", Promise.reject(new Error('fail')));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n};\nexport default {\n  state: state,\n  mutations: mutations,\n  getters: getters,\n  actions: actions\n};","map":{"version":3,"sources":["C:/Users/hurui/Desktop/project-SHP/app/src/store/user/index.js"],"names":["reqGetCode","state","code","mutations","REQGETCODE","getters","actions","reqCode","commit","result","console","log","data","Promise","reject","Error"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE;AADM,CAAd;AAGA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,UADgB,sBACLH,KADK,EACEC,IADF,EACQ;AACtBD,IAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACD;AAHe,CAAlB;AAMA,IAAMG,OAAO,GAAG,EAAhB;AACA,IAAMC,OAAO,GAAG;AACRC,EAAAA,OADQ,yBACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,cAAAA,MAAU,QAAVA,MAAU;AAAA;AAAA,qBACLR,UAAU,EADL;;AAAA;AACpBS,cAAAA,MADoB;;AAAA,oBAEpBA,MAAM,CAACP,IAAP,KAAgB,GAFI;AAAA;AAAA;AAAA;;AAGtBQ,cAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAD,cAAAA,MAAM,CAAC,YAAD,EAAeC,MAAM,CAACG,IAAtB,CAAN;AAJsB;AAAA;;AAAA;AAAA,+CAMfC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,MAAV,CAAf,CANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQzB;AATa,CAAhB;AAYA,eAAe;AACbd,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,SAAS,EAATA,SAFa;AAGbE,EAAAA,OAAO,EAAPA,OAHa;AAIbC,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import { reqGetCode } from '@/api'\r\n\r\nconst state = {\r\n  code: [],\r\n}\r\nconst mutations = {\r\n  REQGETCODE(state, code) {\r\n    state.code = code\r\n  },\r\n}\r\n\r\nconst getters = {}\r\nconst actions = {\r\n  async reqCode({ commit }) {\r\n    let result = await reqGetCode()\r\n    if (result.code === 200) {\r\n      console.log(result)\r\n      commit('REQGETCODE', result.data)\r\n    } else {\r\n      return Promise.reject(new Error('fail'))\r\n    }\r\n  },\r\n}\r\n\r\nexport default {\r\n  state,\r\n  mutations,\r\n  getters,\r\n  actions,\r\n}\r\n"]},"metadata":{},"sourceType":"module"}