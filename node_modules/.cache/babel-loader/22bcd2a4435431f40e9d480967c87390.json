{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/hurui/Desktop/project-SHP/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { reqCategoryList, reqGetBannerList } from \"@/api\";\nvar state = {\n  categoryList: [],\n  bannerList: []\n};\nvar mutations = {\n  CATEGORYLIST: function CATEGORYLIST(state, categoryList) {\n    state.categoryList = categoryList;\n  },\n  GETBANNERLIST: function GETBANNERLIST(state, bannerList) {\n    state.bannerList = bannerList;\n  }\n};\nvar getters = {};\nvar actions = {\n  categoryList: function categoryList(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqCategoryList();\n\n            case 3:\n              result = _context.sent;\n              if (result.code === 200) commit(\"CATEGORYLIST\", result.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  getBannerList: function getBannerList(_ref2) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqGetBannerList();\n\n            case 3:\n              result = _context2.sent;\n              if (result.code === 200) commit(\"GETBANNERLIST\", result.data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};\nexport default {\n  state: state,\n  mutations: mutations,\n  getters: getters,\n  actions: actions\n};","map":{"version":3,"sources":["C:/Users/hurui/Desktop/project-SHP/app/src/store/home/index.js"],"names":["reqCategoryList","reqGetBannerList","state","categoryList","bannerList","mutations","CATEGORYLIST","GETBANNERLIST","getters","actions","commit","result","code","data","getBannerList"],"mappings":";;AAAA,SAAQA,eAAR,EAAyBC,gBAAzB,QAAgD,OAAhD;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,YAAY,EAAC,EADD;AAEZC,EAAAA,UAAU,EAAC;AAFC,CAAd;AAKA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,YADgB,wBACHJ,KADG,EACGC,YADH,EACgB;AAC9BD,IAAAA,KAAK,CAACC,YAAN,GAAqBA,YAArB;AACD,GAHe;AAIhBI,EAAAA,aAJgB,yBAIFL,KAJE,EAIIE,UAJJ,EAIe;AAC7BF,IAAAA,KAAK,CAACE,UAAN,GAAmBA,UAAnB;AACD;AANe,CAAlB;AASA,IAAMI,OAAO,GAAG,EAAhB;AACA,IAAMC,OAAO,GAAG;AACPN,EAAAA,YADO,8BACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAARO,cAAAA,MAAQ,QAARA,MAAQ;AAAA;AAAA,qBACRV,eAAe,EADP;;AAAA;AACvBW,cAAAA,MADuB;AAE3B,kBAAGA,MAAM,CAACC,IAAP,KAAgB,GAAnB,EACEF,MAAM,CAAC,cAAD,EAAgBC,MAAM,CAACE,IAAvB,CAAN;;AAHyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAI5B,GALa;AAMRC,EAAAA,aANQ,gCAMe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAARJ,cAAAA,MAAQ,SAARA,MAAQ;AAAA;AAAA,qBACRT,gBAAgB,EADR;;AAAA;AACvBU,cAAAA,MADuB;AAE3B,kBAAGA,MAAM,CAACC,IAAP,KAAgB,GAAnB,EACEF,MAAM,CAAC,eAAD,EAAiBC,MAAM,CAACE,IAAxB,CAAN;;AAHyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAI5B;AAVa,CAAhB;AAaA,eAAe;AACbX,EAAAA,KAAK,EAALA,KADa;AAEbG,EAAAA,SAAS,EAATA,SAFa;AAGbG,EAAAA,OAAO,EAAPA,OAHa;AAIbC,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import {reqCategoryList, reqGetBannerList} from \"@/api\"\r\n\r\nconst state = {\r\n  categoryList:[],\r\n  bannerList:[]\r\n};\r\n\r\nconst mutations = {\r\n  CATEGORYLIST(state,categoryList){\r\n    state.categoryList = categoryList;\r\n  },\r\n  GETBANNERLIST(state,bannerList){\r\n    state.bannerList = bannerList;\r\n  }\r\n};\r\n\r\nconst getters = {};\r\nconst actions = {\r\n   async categoryList({commit}){\r\n    let result = await reqCategoryList();\r\n    if(result.code === 200)\r\n      commit(\"CATEGORYLIST\",result.data)\r\n  },\r\n  async getBannerList({commit}){\r\n    let result = await reqGetBannerList();\r\n    if(result.code === 200)\r\n      commit(\"GETBANNERLIST\",result.data)\r\n  },\r\n};\r\n\r\nexport default {\r\n  state,\r\n  mutations,\r\n  getters,\r\n  actions\r\n}"]},"metadata":{},"sourceType":"module"}