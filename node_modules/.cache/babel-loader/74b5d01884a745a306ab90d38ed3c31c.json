{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/hurui/Desktop/project-SHP/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport { reqGetCode, reqRegisterCom, reqUserLogin, reqUserInfo, reqLoginOut } from '@/api';\nvar state = {\n  code: [],\n  token: localStorage.getItem('TOKEN'),\n  userInfo: {}\n};\nvar mutations = {\n  REQGETCODE: function REQGETCODE(state, code) {\n    state.code = code;\n  },\n  USERLOGIN: function USERLOGIN(state, token) {\n    state.token = token;\n  },\n  USERINFO: function USERINFO(state, userInfo) {\n    state.userInfo = userInfo;\n  },\n  CLEARINFO: function CLEARINFO(state) {\n    state.token = '';\n    state.userInfo = {};\n  }\n};\nvar getters = {};\nvar actions = {\n  reqCode: function reqCode(_ref, phone) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGetCode(phone);\n\n            case 3:\n              result = _context.sent;\n\n              if (!(result.code === 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              commit('REQGETCODE', result.data);\n              _context.next = 9;\n              break;\n\n            case 8:\n              return _context.abrupt(\"return\", Promise.reject(new Error('fail')));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  reqGetRegisterCom: function reqGetRegisterCom(_ref2, data) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqRegisterCom(data);\n\n            case 3:\n              result = _context2.sent;\n\n              if (!(result.code === 200)) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", 'ok');\n\n            case 8:\n              return _context2.abrupt(\"return\", Promise.reject(new Error('fail')));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  reqGetUserLogin: function reqGetUserLogin(_ref3, data) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return reqUserLogin(data);\n\n            case 3:\n              result = _context3.sent;\n\n              if (!(result.code === 200)) {\n                _context3.next = 10;\n                break;\n              }\n\n              commit('USERLOGIN', result.data.token);\n              localStorage.setItem('TOKEN', result.data.token);\n              return _context3.abrupt(\"return\", 'ok');\n\n            case 10:\n              return _context3.abrupt(\"return\", Promise.reject(new Error('fail')));\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  reqGetLoginOut: function reqGetLoginOut(_ref4) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return reqLoginOut();\n\n            case 3:\n              result = _context4.sent;\n              console.log(result);\n\n              if (!(result.code === 200)) {\n                _context4.next = 10;\n                break;\n              }\n\n              commit('CLERAINFO');\n              return _context4.abrupt(\"return\", 'ok');\n\n            case 10:\n              return _context4.abrupt(\"return\", Promise.reject(new Error('fail')));\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  reqGetUserInfo: function reqGetUserInfo(_ref5) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context5.next = 3;\n              return reqUserInfo();\n\n            case 3:\n              result = _context5.sent;\n              console.log(result);\n\n              if (!(result.code === 200)) {\n                _context5.next = 10;\n                break;\n              }\n\n              commit('USERINFO', result.data);\n              return _context5.abrupt(\"return\", 'ok');\n\n            case 10:\n              return _context5.abrupt(\"return\", Promise.reject(new Error('fail')));\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  }\n};\nexport default {\n  state: state,\n  mutations: mutations,\n  getters: getters,\n  actions: actions\n};","map":{"version":3,"sources":["C:/Users/hurui/Desktop/project-SHP/app/src/store/user/index.js"],"names":["reqGetCode","reqRegisterCom","reqUserLogin","reqUserInfo","reqLoginOut","state","code","token","localStorage","getItem","userInfo","mutations","REQGETCODE","USERLOGIN","USERINFO","CLEARINFO","getters","actions","reqCode","phone","commit","result","data","Promise","reject","Error","reqGetRegisterCom","reqGetUserLogin","setItem","reqGetLoginOut","console","log","reqGetUserInfo"],"mappings":";;;;AAAA,SACEA,UADF,EAEEC,cAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,WALF,QAMO,OANP;AAQA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,EADM;AAEZC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAFK;AAGZC,EAAAA,QAAQ,EAAE;AAHE,CAAd;AAKA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,UADgB,sBACLP,KADK,EACEC,IADF,EACQ;AACtBD,IAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACD,GAHe;AAIhBO,EAAAA,SAJgB,qBAINR,KAJM,EAICE,KAJD,EAIQ;AACtBF,IAAAA,KAAK,CAACE,KAAN,GAAcA,KAAd;AACD,GANe;AAOhBO,EAAAA,QAPgB,oBAOPT,KAPO,EAOAK,QAPA,EAOU;AACxBL,IAAAA,KAAK,CAACK,QAAN,GAAiBA,QAAjB;AACD,GATe;AAUhBK,EAAAA,SAVgB,qBAUNV,KAVM,EAUC;AACfA,IAAAA,KAAK,CAACE,KAAN,GAAc,EAAd;AACAF,IAAAA,KAAK,CAACK,QAAN,GAAiB,EAAjB;AACD;AAbe,CAAlB;AAgBA,IAAMM,OAAO,GAAG,EAAhB;AACA,IAAMC,OAAO,GAAG;AACRC,EAAAA,OADQ,yBACYC,KADZ,EACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjBC,cAAAA,MAAiB,QAAjBA,MAAiB;AAAA;AAAA,qBACZpB,UAAU,CAACmB,KAAD,CADE;;AAAA;AAC3BE,cAAAA,MAD2B;;AAAA,oBAE3BA,MAAM,CAACf,IAAP,KAAgB,GAFW;AAAA;AAAA;AAAA;;AAG7Bc,cAAAA,MAAM,CAAC,YAAD,EAAeC,MAAM,CAACC,IAAtB,CAAN;AAH6B;AAAA;;AAAA;AAAA,+CAKtBC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,MAAV,CAAf,CALsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOhC,GARa;AASRC,EAAAA,iBATQ,oCASsBJ,IATtB,EAS4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhBF,cAAAA,MAAgB,SAAhBA,MAAgB;AAAA;AAAA,qBACrBnB,cAAc,CAACqB,IAAD,CADO;;AAAA;AACpCD,cAAAA,MADoC;;AAAA,oBAEpCA,MAAM,CAACf,IAAP,KAAgB,GAFoB;AAAA;AAAA;AAAA;;AAAA,gDAG/B,IAH+B;;AAAA;AAAA,gDAK/BiB,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,MAAV,CAAf,CAL+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOzC,GAhBa;AAkBRE,EAAAA,eAlBQ,kCAkBoBL,IAlBpB,EAkB0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhBF,cAAAA,MAAgB,SAAhBA,MAAgB;AAAA;AAAA,qBACnBlB,YAAY,CAACoB,IAAD,CADO;;AAAA;AAClCD,cAAAA,MADkC;;AAAA,oBAElCA,MAAM,CAACf,IAAP,KAAgB,GAFkB;AAAA;AAAA;AAAA;;AAGpCc,cAAAA,MAAM,CAAC,WAAD,EAAcC,MAAM,CAACC,IAAP,CAAYf,KAA1B,CAAN;AACAC,cAAAA,YAAY,CAACoB,OAAb,CAAqB,OAArB,EAA8BP,MAAM,CAACC,IAAP,CAAYf,KAA1C;AAJoC,gDAK7B,IAL6B;;AAAA;AAAA,gDAO7BgB,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,MAAV,CAAf,CAP6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASvC,GA3Ba;AA6BRI,EAAAA,cA7BQ,iCA6BmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVT,cAAAA,MAAU,SAAVA,MAAU;AAAA;AAAA,qBACZhB,WAAW,EADC;;AAAA;AAC3BiB,cAAAA,MAD2B;AAE/BS,cAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;;AAF+B,oBAG3BA,MAAM,CAACf,IAAP,KAAgB,GAHW;AAAA;AAAA;AAAA;;AAI7Bc,cAAAA,MAAM,CAAC,WAAD,CAAN;AAJ6B,gDAKtB,IALsB;;AAAA;AAAA,gDAOtBG,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,MAAV,CAAf,CAPsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAShC,GAtCa;AAwCRO,EAAAA,cAxCQ,iCAwCmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVZ,cAAAA,MAAU,SAAVA,MAAU;AAAA;AAAA,qBACZjB,WAAW,EADC;;AAAA;AAC3BkB,cAAAA,MAD2B;AAE/BS,cAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;;AAF+B,oBAG3BA,MAAM,CAACf,IAAP,KAAgB,GAHW;AAAA;AAAA;AAAA;;AAI7Bc,cAAAA,MAAM,CAAC,UAAD,EAAaC,MAAM,CAACC,IAApB,CAAN;AAJ6B,gDAKtB,IALsB;;AAAA;AAAA,gDAOtBC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,MAAV,CAAf,CAPsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAShC;AAjDa,CAAhB;AAoDA,eAAe;AACbpB,EAAAA,KAAK,EAALA,KADa;AAEbM,EAAAA,SAAS,EAATA,SAFa;AAGbK,EAAAA,OAAO,EAAPA,OAHa;AAIbC,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import {\r\n  reqGetCode,\r\n  reqRegisterCom,\r\n  reqUserLogin,\r\n  reqUserInfo,\r\n  reqLoginOut,\r\n} from '@/api'\r\n\r\nconst state = {\r\n  code: [],\r\n  token: localStorage.getItem('TOKEN'),\r\n  userInfo: {},\r\n}\r\nconst mutations = {\r\n  REQGETCODE(state, code) {\r\n    state.code = code\r\n  },\r\n  USERLOGIN(state, token) {\r\n    state.token = token\r\n  },\r\n  USERINFO(state, userInfo) {\r\n    state.userInfo = userInfo\r\n  },\r\n  CLEARINFO(state) {\r\n    state.token = ''\r\n    state.userInfo = {}\r\n  },\r\n}\r\n\r\nconst getters = {}\r\nconst actions = {\r\n  async reqCode({ commit }, phone) {\r\n    let result = await reqGetCode(phone)\r\n    if (result.code === 200) {\r\n      commit('REQGETCODE', result.data)\r\n    } else {\r\n      return Promise.reject(new Error('fail'))\r\n    }\r\n  },\r\n  async reqGetRegisterCom({ commit }, data) {\r\n    let result = await reqRegisterCom(data)\r\n    if (result.code === 200) {\r\n      return 'ok'\r\n    } else {\r\n      return Promise.reject(new Error('fail'))\r\n    }\r\n  },\r\n\r\n  async reqGetUserLogin({ commit }, data) {\r\n    let result = await reqUserLogin(data)\r\n    if (result.code === 200) {\r\n      commit('USERLOGIN', result.data.token)\r\n      localStorage.setItem('TOKEN', result.data.token)\r\n      return 'ok'\r\n    } else {\r\n      return Promise.reject(new Error('fail'))\r\n    }\r\n  },\r\n\r\n  async reqGetLoginOut({ commit }) {\r\n    let result = await reqLoginOut()\r\n    console.log(result)\r\n    if (result.code === 200) {\r\n      commit('CLERAINFO')\r\n      return 'ok'\r\n    } else {\r\n      return Promise.reject(new Error('fail'))\r\n    }\r\n  },\r\n\r\n  async reqGetUserInfo({ commit }) {\r\n    let result = await reqUserInfo()\r\n    console.log(result)\r\n    if (result.code === 200) {\r\n      commit('USERINFO', result.data)\r\n      return 'ok'\r\n    } else {\r\n      return Promise.reject(new Error('fail'))\r\n    }\r\n  },\r\n}\r\n\r\nexport default {\r\n  state,\r\n  mutations,\r\n  getters,\r\n  actions,\r\n}\r\n"]},"metadata":{},"sourceType":"module"}