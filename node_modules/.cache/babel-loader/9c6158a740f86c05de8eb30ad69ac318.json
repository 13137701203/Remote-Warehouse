{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/hurui/Desktop/project-SHP/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport { reqGetCode, reqRegisterCom } from '@/api';\nvar state = {\n  code: []\n};\nvar mutations = {\n  REQGETCODE: function REQGETCODE(state, code) {\n    state.code = code;\n  }\n};\nvar getters = {};\nvar actions = {\n  reqCode: function reqCode(_ref, phone) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGetCode(phone);\n\n            case 3:\n              result = _context.sent;\n\n              if (!(result.code === 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              commit('REQGETCODE', result.data);\n              _context.next = 9;\n              break;\n\n            case 8:\n              return _context.abrupt(\"return\", Promise.reject(new Error('fail')));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  reqGetRegisterCom: function reqGetRegisterCom(_ref2, data) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqRegisterCom(data);\n\n            case 3:\n              result = _context2.sent;\n\n              if (!(result.code === 200)) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", 'ok');\n\n            case 8:\n              return _context2.abrupt(\"return\", Promise.reject(new Error('fail')));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};\nexport default {\n  state: state,\n  mutations: mutations,\n  getters: getters,\n  actions: actions\n};","map":{"version":3,"sources":["C:/Users/hurui/Desktop/project-SHP/app/src/store/user/index.js"],"names":["reqGetCode","reqRegisterCom","state","code","mutations","REQGETCODE","getters","actions","reqCode","phone","commit","result","data","Promise","reject","Error","reqGetRegisterCom"],"mappings":";;;;AAAA,SAASA,UAAT,EAAqBC,cAArB,QAA2C,OAA3C;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE;AADM,CAAd;AAGA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,UADgB,sBACLH,KADK,EACEC,IADF,EACQ;AACtBD,IAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACD;AAHe,CAAlB;AAMA,IAAMG,OAAO,GAAG,EAAhB;AACA,IAAMC,OAAO,GAAG;AACRC,EAAAA,OADQ,yBACYC,KADZ,EACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjBC,cAAAA,MAAiB,QAAjBA,MAAiB;AAAA;AAAA,qBACZV,UAAU,CAACS,KAAD,CADE;;AAAA;AAC3BE,cAAAA,MAD2B;;AAAA,oBAE3BA,MAAM,CAACR,IAAP,KAAgB,GAFW;AAAA;AAAA;AAAA;;AAG7BO,cAAAA,MAAM,CAAC,YAAD,EAAeC,MAAM,CAACC,IAAtB,CAAN;AAH6B;AAAA;;AAAA;AAAA,+CAKtBC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,MAAV,CAAf,CALsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOhC,GARa;AASRC,EAAAA,iBATQ,oCASsBJ,IATtB,EAS4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhBF,cAAAA,MAAgB,SAAhBA,MAAgB;AAAA;AAAA,qBACrBT,cAAc,CAACW,IAAD,CADO;;AAAA;AACpCD,cAAAA,MADoC;;AAAA,oBAEpCA,MAAM,CAACR,IAAP,KAAgB,GAFoB;AAAA;AAAA;AAAA;;AAAA,gDAG/B,IAH+B;;AAAA;AAAA,gDAK/BU,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,MAAV,CAAf,CAL+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOzC;AAhBa,CAAhB;AAmBA,eAAe;AACbb,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,SAAS,EAATA,SAFa;AAGbE,EAAAA,OAAO,EAAPA,OAHa;AAIbC,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import { reqGetCode, reqRegisterCom } from '@/api'\r\n\r\nconst state = {\r\n  code: [],\r\n}\r\nconst mutations = {\r\n  REQGETCODE(state, code) {\r\n    state.code = code\r\n  },\r\n}\r\n\r\nconst getters = {}\r\nconst actions = {\r\n  async reqCode({ commit }, phone) {\r\n    let result = await reqGetCode(phone)\r\n    if (result.code === 200) {\r\n      commit('REQGETCODE', result.data)\r\n    } else {\r\n      return Promise.reject(new Error('fail'))\r\n    }\r\n  },\r\n  async reqGetRegisterCom({ commit }, data) {\r\n    let result = await reqRegisterCom(data)\r\n    if (result.code === 200) {\r\n      return 'ok'\r\n    } else {\r\n      return Promise.reject(new Error('fail'))\r\n    }\r\n  },\r\n}\r\n\r\nexport default {\r\n  state,\r\n  mutations,\r\n  getters,\r\n  actions,\r\n}\r\n"]},"metadata":{},"sourceType":"module"}